<?xml version="1.0" encoding="UTF-8"?>

<reference xml:id="xsl_result_document" scheme="xsl"
   specification="creating-result-trees">
   <body>
      <purpose>
         <p>A declaration that determines the format of a result document that
            is written to the output.</p>
      </purpose>
      <usage>
         <p>The <attr>href</attr> attribute specifies the absolute or relative
            URI of the output file.</p>
         <p>The <attr>format</attr> attribute may be used to identify a matching
            output format definition, in the <attr>name</attr> attribute value
            on an <element>xsl:output</element> declaration.</p>
         <p>Several attributes have the same purpose as those in the
               <element>xsl:output</element> element, and may be used to
            override the respective values. These values may be supplied as
            attribute value templates, returning the appropriate type.</p>
      </usage>
      <contains label="contains" display="inline">
         <link href="xsl_sequence_constructor_type"/>
      </contains>
      <containedby label="substitution" display="inline">
         <link href="xsl_instruction"/>
      </containedby>
      <properties type="attribute">
         <property xml:id="byte_order">
            <name>byte-order-mark</name>
            <description>Defines whether or not a byte order mark is written at
               the start of the file</description>
            <type>xsl:avt</type>
            <values>yes, no</values>
            <required state="optional"/>
         </property>
         <property xml:id="cdata">
            <name>cdata-section-elements</name>
            <description>Space-separated names of the elements whose content is
               to be output inside CDATA sections</description>
            <type>xsl:avt</type>
            <required state="optional"/>
         </property>

         <property xml:id="public">
            <name>doctype-public</name>
            <description>The public identifier to be used in any DOCTYPE
               declaration. Ignored unless <attr>doctype-system</attr> is also
               specified.</description>
            <type>xsl:avt</type>
            <required state="optional"/>
         </property>
         <property xml:id="system">
            <name>doctype-system</name>
            <description>The system identifier to be used in any DOCTYPE
               declaration</description>
            <type>xsl:avt</type>
            <required state="optional"/>
         </property>
         <property xml:id="encoding">
            <name>encoding</name>
            <description>The character encoding of the output</description>
            <type>xsl:avt</type>
            <required state="optional"/>
         </property>
         <property xml:id="escape_uri">
            <name>escape-uri-attributes</name>
            <description>Whether or not URI attributes should be escaped in HTML
               and XHTML output</description>
            <type>xsl:avt</type>
            <values>yes, no</values>
            <required state="optional"/>
         </property>
         <property xml:id="format">
            <name>format</name>
            <description>The name of an <element>xsl:output</element>
               declaration to use</description>
            <type>xsl:avt</type>
            <required state="optional"/>
         </property>
         <property xml:id="href">
            <name>href</name>
            <description>The location of the output file</description>
            <type>xsl:avt</type>
            <required state="optional"/>
         </property>
         <property xml:id="include-content-type">
            <name>include-content-type</name>
            <description>Whether or not a <element>meta</element> element should
               be should included when the <attr>method</attr> attribute is
               HTML</description>
            <type>xsl:avt</type>
            <values>yes, no</values>
            <required state="optional"/>
         </property>
         <property xml:id="indent">
            <name>indent</name>
            <description>Whether or not to indent the output</description>
            <type>xsl:avt</type>
            <values>yes, no</values>
            <required state="optional"/>
         </property>
         <property xml:id="media_type">
            <name>media-type</name>
            <description>The MIME type of the output file</description>
            <type>xsl:avt</type>
            <required state="optional"/>
         </property>
         <property xml:id="method">
            <name>method</name>
            <description>The format to be output. If it is not one of the
               recognized values it must be a lexical QName.</description>
            <type>xsl:avt</type>
            <values>xml, html, xhtml, text</values>
            <required state="optional"/>
         </property>
         <property xml:id="normalize">
            <name>normalization-form</name>
            <description>Specifies how Unicode characters with multiple
               representations should be normalized</description>
            <type>xsl:avt</type>
            <values>NFC, NFD, NFKC, NFKD, fully-normalized, none</values>
            <required state="optional"/>
         </property>
         <property xml:id="omit_xml_declaraction">
            <name>omit-xml-declaraction</name>
            <description>Whether or not to output an XML
               declaration</description>
            <type>xsl:avt</type>
            <values>yes, no</values>
            <required state="optional"/>
         </property>
         <property xml:id="standalone">
            <name>standalone</name>
            <description>Sets the value of the <attr>standalone</attr> attribute
               in the XML declaration</description>
            <type>xsl:avt</type>
            <values>yes, no</values>
            <required state="optional"/>
         </property>
         <property xml:id="type">
            <name>type</name>
            <description>The schema type to use in validation</description>
            <type>xsl:QName</type>
            <required state="optional"/>
         </property>
         <property xml:id="undeclare_ns">
            <name>undeclare-prefixes</name>
            <description>Whether or not namespaces should be undeclared when out
               of scope. Applies only if the <attr>output-version</attr>
               attribute is set to <code>'1.1'</code>.</description>
            <type>xsl:avt</type>
            <values>yes, no, omit</values>
            <required state="optional"/>
         </property>
         <property xml:id="use_char_map">
            <name>use-character-maps</name>
            <description>Space-separated QNames of the
                  <element>xsl:character-map</element> elements used in
               character mapping</description>
            <type>xsl:QName</type>
            <values>yes, no</values>
            <required state="optional"/>
         </property>
         <property xml:id="version">
            <name>output-version</name>
            <description>The version of XML in the output document</description>
            <type>xsl:avt</type>
            <required state="optional"/>
         </property>
         <property xml:id="validation">
            <name>validation</name>
            <description>How any validation should be applied</description>
            <type>xs:token</type>
            <values>strict, lax, preserve, skip</values>
            <required state="optional"/>
         </property>
      </properties>
      <properties>
         <common label="attrgroup" display="inline">
            <link href="ge_attr"/>
            <link href="version_attr"/>
         </common>
      </properties>
      <examples>
         <codeblock><![CDATA[
<xsl:result-document href="{$outputfile}">
   <xsl:copy-of select="$archive"/>
</xsl:result-document>]]></codeblock>
      </examples>
      <related role="navigation" label="related">
         <link href="xsl_er"/>
      </related>
   </body>
</reference>
